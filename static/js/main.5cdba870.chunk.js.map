{"version":3,"sources":["spellLevel.ts","SpellView.tsx","SpellBook.tsx","BeyondFileView.tsx","Instructions.tsx","App.tsx","index.tsx"],"names":["sortSpells","spells","spellLevels","forEach","spell","collection","find","x","level","definition","push","sort","a","b","sl","name","SpellView","react_default","createElement","className","this","props","getComponents","components","componentsDescription","dangerouslySetInnerHTML","__html","description","trim","React","Component","map","join","SpellBook","key","SpellBook_SpellLevelText","s","SpellView_SpellView","id","SpellLevelText","levelName","concat","BeyondFileView","getClassSpells","myClass","_this","file","classes","myClassSpells","classSpells","entityTypeId","getAllClassSpells","allClassSpells","cs","apply","Object","toConsumableArray","spellsByLevel","allSpells","_len2","arguments","length","collections","Array","_key2","c","uniqueSpells","filter","y","sortMultipleSpells","item","feat","SpellBook_SpellBook","PureComponent","Instructions","state","characterNumber","updateCharacterNumber","e","parseInt","target","value","setState","getCharacterJson","_callee","uri","response","responseJson","regenerator_default","wrap","_context","prev","next","preventDefault","stopPropagation","fetch","sent","status","alert","abrupt","text","updateCharacterJson","stop","rel","href","style","marginTop","marginBottom","placeholder","type","onChange","onClick","App","character","undefined","characters","loadSaved","json","localStorage","getItem","characterJson","JSON","stringify","setItem","deleteSaved","removeItem","parsed","parse","charName","err","console","log","clear","myView","document","getElementById","scrollIntoView","behavior","process","_this2","role","aria-label","src_Instructions","src_BeyondFileView","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.5cdba870.chunk.js","sourcesContent":["import { Spell } from \"./character\";\r\n\r\nexport interface SpellLevelCollection {\r\n  level: number;\r\n  spells: Spell[];\r\n}\r\n\r\n\r\n// export const unionSpells = (sc1: SpellLevelCollection[], sc2: SpellLevelCollection[]): SpellLevelCollection[] => {\r\n//   const newCollection: SpellLevelCollection[] = [];\r\n//   for (let i = 0; i < 9; i++){\r\n//     const aMatch = sc1.find(x => x.level === i);\r\n//     const bMatch = sc2.find(x => x.level === i);\r\n//     if (aMatch || bMatch){\r\n//       const allSpells: Spell[] = [];\r\n//       if (aMatch && aMatch.spells.length){\r\n//         allSpells.push(...aMatch.spells);\r\n//       }\r\n//       if (bMatch){\r\n//         allSpells.push(...bMatch.spells);\r\n//       }\r\n//       allSpells.sort((a, b) => a.definition.name > b.definition.name ? 1 : 0);\r\n//       newCollection.push({\r\n//         level: i,\r\n//         spells: allSpells,\r\n//       });      \r\n//     }\r\n//   }\r\n//   return newCollection;\r\n// };\r\n\r\nexport const unionSpells = (...collections: Array<SpellLevelCollection[] | undefined>): SpellLevelCollection[] => {\r\n  const allSpells: Spell[] = [];\r\n  collections.forEach(c => {\r\n    if (c){\r\n      c.forEach(slc => allSpells.push(...slc.spells));\r\n    }\r\n  });\r\n  return sortSpells(allSpells);\r\n};\r\n\r\nexport const sortMultipleSpells = (...collections: Array<Spell[] | undefined>): SpellLevelCollection[] => {\r\n  const allSpells: Spell[] = [];\r\n  collections.forEach(c => {\r\n    if (c){\r\n      const uniqueSpells = c.filter(x => !allSpells.find(y => y.id === x.id));\r\n      allSpells.push(...uniqueSpells);\r\n    }\r\n  });\r\n  return sortSpells(allSpells);\r\n};\r\n\r\nexport const sortSpells = (spells: Spell[]): SpellLevelCollection[] => {\r\n  const spellLevels: SpellLevelCollection[] = [];\r\n  spells.forEach(spell => {\r\n    let collection = spellLevels.find(x => x.level === spell.definition.level);\r\n    if (!collection){\r\n      collection = {\r\n        level: spell.definition.level,\r\n        spells: [spell],\r\n      };\r\n      spellLevels.push(collection);\r\n    }\r\n    else{\r\n      collection.spells.push(spell);\r\n    }    \r\n  });\r\n  spellLevels.sort((a, b) => a.level - b.level);\r\n  spellLevels.forEach(sl => {\r\n    sl.spells.sort((a, b) => a.definition.name > b.definition.name ? 1 : 0);\r\n  });\r\n  return spellLevels;\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Spell } from \"./character\";\r\n\r\nexport interface ISpellViewProps {\r\n  spell: Spell;\r\n}\r\n\r\nexport default class SpellView extends React.Component<ISpellViewProps> {\r\n  public render() {\r\n    return (\r\n      <div className=\"spell\">\r\n        <div className=\"spell-name\">{this.props.spell.definition.name}</div>\r\n        <div>Components: {getComponents(this.props.spell.definition.components)}</div>\r\n        {\r\n          this.props.spell.definition.componentsDescription && (\r\n            <div>\r\n              <div>Material: {this.props.spell.definition.componentsDescription}</div>\r\n            </div>\r\n          )\r\n        }\r\n        <div dangerouslySetInnerHTML={{__html: this.props.spell.definition.description.trim()}}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst getComponents = (components: number[]) => {\r\n  const mapped = components.map(x => x === 1 ? \"V\" : x === 2 ? \"S\" : \"M\");\r\n  const joined = mapped.join(\", \");\r\n  return joined;\r\n};\r\n","import React from \"react\";\r\nimport SpellView from \"./SpellView\";\r\nimport {SpellLevelCollection} from \"./spellLevel\";\r\n\r\nexport interface ISpellBookProps {\r\n  spells: SpellLevelCollection[];\r\n}\r\n\r\nexport default class SpellBook extends React.Component<ISpellBookProps> {\r\n  public render() {\r\n    return (\r\n      <div className=\"spellbook\">\r\n        {/* <div>\r\n          <select name=\"\" id=\"\">\r\n            <option value=\"\">Normal</option>\r\n          </select>\r\n        </div> */}\r\n        <div className=\"section-to-print\">\r\n          {this.props.spells.map(sl => (\r\n            <div key={sl.level}>\r\n              <SpellLevelText level={sl.level} />\r\n              {sl.spells.map(s => (\r\n                <SpellView spell={s} key={s.id} />\r\n                // <div>Test</div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst SpellLevelText = (props: {level: number}) => {\r\n  const levelName = props.level ? `Level ${props.level}` :  \"Cantrips\";\r\n  return <h1 className=\"spell-level-name\">{levelName}</h1>;\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport {Spell, BeyondCharacter } from \"./character\";\r\nimport { sortMultipleSpells } from \"./spellLevel\";\r\nimport SpellBook from \"./SpellBook\";\r\n\r\ninterface IBeyondFileView {\r\n  file: BeyondCharacter;\r\n}\r\n\r\nclass BeyondFileView extends React.PureComponent<IBeyondFileView> {\r\n  getClassSpells = (className: string) => {\r\n    const myClass = this.props.file.classes.find(x => x.definition.name === className);\r\n    if (myClass){\r\n      const myClassSpells = this.props.file.classSpells.find(x => x.entityTypeId === myClass.entityTypeId);\r\n      if (myClassSpells){\r\n        return myClassSpells.spells;\r\n      }\r\n    }\r\n  }\r\n  getAllClassSpells = () => {\r\n    const allClassSpells: Spell[] = [];\r\n    this.props.file.classSpells.forEach(cs => allClassSpells.push(...cs.spells));\r\n    return allClassSpells;\r\n  }\r\n  render(){\r\n    //const wizardSpells = this.getClassSpells(\"Wizard\");\r\n    const classSpells = this.getAllClassSpells();\r\n    const itemSpells = this.props.file.spells.item;\r\n    const featSpells = this.props.file.spells.feat;\r\n    const spellsByLevel = sortMultipleSpells(classSpells, itemSpells, featSpells);\r\n    if (spellsByLevel.find(x => x.spells.length > 0)){ \r\n      return (\r\n        <SpellBook spells={spellsByLevel} />\r\n      );\r\n    }\r\n    else{\r\n      return (\r\n        <div>No spells</div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default BeyondFileView;\r\n","import React from \"react\";\r\nimport \"./steps.css\";\r\n\r\ninterface IInstructions {\r\n  updateCharacterJson: (blob: string) => void;\r\n}\r\n\r\ninterface State {\r\n  characterNumber: string;\r\n}\r\n\r\nclass Instructions extends React.Component<IInstructions, State> {\r\n  state: State = {\r\n    characterNumber: process.env.NODE_ENV === \"development\" ? \"3312827\" : \"\",\r\n  };\r\n  updateCharacterNumber = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const characterNumber = parseInt(e.target.value, 10.0);\r\n    if (characterNumber > 0) {\r\n      this.setState({ characterNumber: e.target.value });\r\n    }\r\n  }\r\n  getCharacterJson = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const uri = \"http://dndbeyond.azurewebsites.net/api/BeyondFile?id=\" + this.state.characterNumber;\r\n    const response = await fetch(uri);\r\n    if (response.status !== 200){\r\n      alert(\"Error fetching Beyond File\");\r\n      return;\r\n    }\r\n    const responseJson = await response.text();\r\n    this.props.updateCharacterJson(responseJson);\r\n  }\r\n  render() {\r\n    const profileAddress = \"https://www.dndbeyond.com/profile/Example/characters\";\r\n    return (\r\n      <div className=\"steps\">\r\n        <div className=\"step\">\r\n          <div className=\"step-title\">Load A Character</div>\r\n          <div>\r\n            Go to <a\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href={\"https://www.dndbeyond.com/my-characters\"}>your character page</a> on D&amp;D Beyond,\r\n            click \"View\" on the character who's spells you wish to print.\r\n            Look at the URL in your browser address bar. It should end in a number.\r\n            Enter that number below.\r\n          </div>\r\n          <div style={{marginTop: \"10px\", marginBottom: \"10px\"}}>\r\n            For instance if your address was as follows:\r\n            <div>\r\n              <span className=\"exampleAddress\">\r\n                <span>{profileAddress}/</span>\r\n                <span className=\"highlighted\">1234567</span>\r\n              </span>\r\n            </div>\r\n            <div>Then you would enter \"1234567\"</div>\r\n          </div>\r\n          <form>\r\n            <input\r\n              placeholder=\"000000\"\r\n              type=\"text\"\r\n              value={this.state.characterNumber}\r\n              onChange={this.updateCharacterNumber} />\r\n            <button onClick={this.getCharacterJson} className=\"done-button\">Load Character</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Instructions;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BeyondCharacter } from \"./character\";\r\nimport \"./normalize.css\";\r\nimport BeyondFileView from \"./BeyondFileView\";\r\nimport Instructions from \"./Instructions\";\r\n\r\n\r\ninterface State {\r\n  character: BeyondCharacter | undefined;\r\n  characters: string[];\r\n}\r\n\r\nclass App extends Component<{}, State> {\r\n  state: State = {\r\n    character: undefined,\r\n    characters: [],\r\n  };\r\n  componentDidMount() {\r\n    const json = localStorage.getItem(\"characters\");\r\n    if (json) {\r\n      const characters: string[] = JSON.parse(json);\r\n      if (process.env.NODE_ENV === \"development\" && characters.length > 0){\r\n        this.loadSaved(characters[0]);\r\n      }\r\n      this.setState({ characters });\r\n    }\r\n  }\r\n  loadSaved = (name: string) => {\r\n    const json = localStorage.getItem(name);\r\n    if (json) {\r\n      this.updateCharacterJson(json);\r\n    }\r\n    else {\r\n      alert(\"Sorry, could not load character from memory.\");\r\n      const characters = [...this.state.characters.filter(x => x !== name)];\r\n      characters.sort((a, b) => a < b ? 0 : 1);\r\n      this.setState({ characters }, () => {\r\n        const characterJson = JSON.stringify(characters);\r\n        localStorage.setItem(\"characters\", characterJson);\r\n      });\r\n    }\r\n  }\r\n  deleteSaved = (name: string) => {\r\n    localStorage.removeItem(name);\r\n    const characters = [...this.state.characters.filter(x => x !== name)];\r\n    characters.sort((a, b) => a < b ? 0 : 1);\r\n    this.setState({ characters });\r\n  }\r\n  updateCharacterJson = (text: string) => {\r\n    try {\r\n      const parsed: BeyondCharacter = JSON.parse(text);\r\n      if (parsed) {\r\n        const charName = parsed.name;\r\n        try{\r\n          localStorage.setItem(charName, text);\r\n        }\r\n        catch (err){\r\n          console.log(\"Couldn't save character\", err);\r\n        }\r\n        const characters = [...this.state.characters.filter(x => x !== charName), charName];\r\n        characters.sort((a, b) => a < b ? 0 : 1);\r\n        this.setState({ characters }, () => {\r\n          const characterJson = JSON.stringify(characters);\r\n          try{\r\n            localStorage.setItem(\"characters\", characterJson);\r\n          }\r\n          catch (err){\r\n            console.log(\"Couldn't save character list\", err);\r\n            localStorage.clear();\r\n            localStorage.setItem(\"characters\", characterJson);\r\n          }          \r\n        });\r\n        this.setState({ character: parsed }, () => {\r\n          const myView = document.getElementById(\"beyondFileView\");\r\n          if (myView) {\r\n            myView.scrollIntoView({ behavior: \"smooth\" });\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        alert(\"ERR1: That is not a valid JSON!\");\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log(\"ERR2\", err);\r\n      alert(\"ERR2: Something went wrong!\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <h1>D&amp;D Beyond Spell Printer</h1>\r\n        <div className=\"about\">\r\n          <p>\r\n            I made this site because even though I love D&amp;D Beyond, I'm old-school and I like\r\n            to print out my character. Unfortunately, the print out doesn't include spell descriptions.\r\n            <span role=\"img\" aria-label=\"Frowning face\">🙁</span>\r\n          </p>\r\n          <p>\r\n            And sure, you can look up those descriptions in the app, which is pretty convenient, but the app\r\n            doesn't include your custom/homebrew spells. So, I decided to make this site to help me out.\r\n            This will get you a big list of all your spells for easy printing! Don't worry, it's all safe.\r\n            I don't need your password or anything. <span role=\"img\" aria-label=\"Happy face\">🙂</span>\r\n          </p>\r\n        </div>\r\n        <div className=\"beta\">\r\n          <span>This page is in Beta! If you find a problem, please </span>\r\n          <a href=\"https://github.com/Pharylon/Spellbook/issues\">submit a bug report.</a> Thanks!\r\n        </div>\r\n        <div className={\"instructions\"}>\r\n          {\r\n            !!this.state.characters.length && (\r\n              <div className=\"steps\">\r\n                <div className=\"step\">\r\n                  <div className=\"step-title\">Load A previously Saved Character</div>\r\n                  <ul>\r\n                    {this.state.characters.map(x => (\r\n                      <li key={x}>\r\n                        <span onClick={() => this.loadSaved(x)} className=\"previous-character\">{x}</span>\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                        <span onClick={() => this.deleteSaved(x)} className=\"fa fa-trash\">&nbsp;</span>\r\n\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n          <Instructions updateCharacterJson={this.updateCharacterJson} />\r\n        </div>\r\n        {\r\n          this.state.character && (\r\n            <div id=\"beyondFileView\">\r\n              <BeyondFileView file={this.state.character} />\r\n            </div>\r\n            // <WindowPortal>\r\n            //   <BeyondFileView file={this.state.file} />\r\n            // </WindowPortal>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}